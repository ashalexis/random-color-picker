{"ast":null,"code":"import _classCallCheck from\"/Users/Ashley/Documents/GitHub/random-color-picker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Ashley/Documents/GitHub/random-color-picker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Ashley/Documents/GitHub/random-color-picker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Ashley/Documents/GitHub/random-color-picker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/Ashley/Documents/GitHub/random-color-picker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Ashley/Documents/GitHub/random-color-picker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import ReactDOM from'react-dom';import{Button}from'./Button';export var Random=/*#__PURE__*/function(_React$Component){_inherits(Random,_React$Component);function Random(props){var _this;_classCallCheck(this,Random);_this=_possibleConstructorReturn(this,_getPrototypeOf(Random).call(this,props));_this.state={color:[0,0,200]};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}_createClass(Random,[{key:\"componentDidMount\",value:function componentDidMount(){this.applyColor();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){this.applyColor();}},{key:\"formatColor\",value:function formatColor(ary){return'rgb('+ary.join(', ')+')';}},{key:\"isLight\",value:function isLight(){var rgb=this.state.color;return rgb.reduce(function(a,b){return a+b;})<127*3;}},{key:\"applyColor\",value:function applyColor(){var color=this.formatColor(this.state.color);document.body.style.background=color;}},{key:\"chooseColor\",value:function chooseColor(){var random=[];for(var i=0;i<3;i++){random.push(Math.floor(Math.random()*256));}return random;}},{key:\"handleClick\",value:function handleClick(){this.setState({color:this.chooseColor()});}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"h1\",{className:this.isLight()?'white':'black'},\"Your color is \",this.formatColor(this.state.color),\".\"),React.createElement(Button,{light:this.isLight(),onClick:this.handleClick}));}}]);return Random;}(React.Component);","map":{"version":3,"sources":["/Users/Ashley/Documents/GitHub/random-color-picker/src/Random.js"],"names":["React","ReactDOM","Button","Random","props","state","color","handleClick","bind","applyColor","prevProps","prevState","ary","join","rgb","reduce","a","b","formatColor","document","body","style","background","random","i","push","Math","floor","setState","chooseColor","isLight","Component"],"mappings":"ohCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAAQC,MAAR,KAAqB,UAArB,CAEA,UAAaC,CAAAA,MAAb,4EACE,gBAAYC,KAAZ,CAAkB,wCAChB,wEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CAACC,KAAK,CAAE,CAAC,CAAD,CAAG,CAAH,CAAK,GAAL,CAAR,CAAb,CACA,MAAKC,WAAL,CAAiB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAjB,CAHgB,aAIjB,CALH,gFAOsB,CAClB,KAAKC,UAAL,GACD,CATH,8DAWqBC,SAXrB,CAWgCC,SAXhC,CAW2C,CACvC,KAAKF,UAAL,GACD,CAbH,gDAecG,GAfd,CAemB,CACf,MAAO,OAASA,GAAG,CAACC,IAAJ,CAAS,IAAT,CAAT,CAA0B,GAAjC,CACD,CAjBH,yCAmBY,CACR,GAAMC,CAAAA,GAAG,CAAG,KAAKT,KAAL,CAAWC,KAAvB,CACA,MAAOQ,CAAAA,GAAG,CAACC,MAAJ,CAAW,SAACC,CAAD,CAAGC,CAAH,QAASD,CAAAA,CAAC,CAACC,CAAX,EAAX,EAA2B,IAAM,CAAxC,CACD,CAtBH,+CAwBe,CACX,GAAMX,CAAAA,KAAK,CAAG,KAAKY,WAAL,CAAiB,KAAKb,KAAL,CAAWC,KAA5B,CAAd,CACAa,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,CAAiChB,KAAjC,CACD,CA3BH,iDA6BgB,CACZ,GAAMiB,CAAAA,MAAM,CAAG,EAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1BD,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,GAAc,GAAzB,CAAZ,EACD,CACD,MAAOA,CAAAA,MAAP,CACD,CAnCH,iDAqCe,CACX,KAAKK,QAAL,CAAc,CACZtB,KAAK,CAAE,KAAKuB,WAAL,EADK,CAAd,EAGD,CAzCH,uCA2CW,CACP,MACE,gCACE,0BAAI,SAAS,CAAE,KAAKC,OAAL,GAAiB,OAAjB,CAA2B,OAA1C,mBACiB,KAAKZ,WAAL,CAAiB,KAAKb,KAAL,CAAWC,KAA5B,CADjB,KADF,CAIE,oBAAC,MAAD,EAAQ,KAAK,CAAE,KAAKwB,OAAL,EAAf,CAA+B,OAAO,CAAE,KAAKvB,WAA7C,EAJF,CADF,CAQD,CApDH,oBAA4BP,KAAK,CAAC+B,SAAlC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Button} from './Button';\n\nexport class Random extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {color: [0,0,200]};\n    this.handleClick=this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.applyColor();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n\n  formatColor(ary) {\n    return 'rgb(' + ary.join(', ') + ')';\n  }\n\n  isLight() {\n    const rgb = this.state.color;\n    return rgb.reduce((a,b) => a+b) < 127 * 3;\n  }\n\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n\n  chooseColor() {\n    const random = [];\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random()*256));\n    }\n    return random;\n  }\n\n  handleClick(){\n    this.setState({\n      color: this.chooseColor()\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className={this.isLight() ? 'white' : 'black'}>\n          Your color is {this.formatColor(this.state.color)}.\n        </h1>\n        <Button light={this.isLight()} onClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}